---
layout: post
title: "Origin of a Venture-Backed, Acquired Startup"
excerpt: "Seattle, Late 2009 &mdash; For the past 18 months, my 3 co-founders and I had worked out of my brother's cold cold basement, without pay or insurance. We'd built a handful of products that hadn't gone anywhere. Our future wasn't bright."
location: "San Francisco, CA"
---

h1. <a href="{{ page.url }}">{{ page.title }}</a>

<p class="subheadline">The story of how we arrived at the idea for Decide.com</p>

<i>Decide.com was acquired by eBay on September 6, 2013. For those unfamiliar with Decide, we invented technology that predicted the future price of consumer goods. Thinking about buying a Samsung television? We'd tell you whether the price would drop in the next two weeks. We helped you decide when to buy.</i>

Seattle, Late 2009 &mdash; For the past 18 months, my 3 co-founders and I had worked out of my brother's cold cold basement, without pay or insurance. We'd built a handful of products that hadn't gone anywhere. Our future wasn't bright.

h2. An Observation 

Brian noticed his girlfriend (now wife) Jessica, had looked at the same dress on Nordstrom's website several days in a row.

Brian: "Why do you go to that page every day?"
Jessica: "I'm waiting for the price to go down"
Brian: "Oh, we can build you something that checks it for you"

h2. A Prototype 

Brian told Ian about the conversation and by the following Monday they'd built a prototype. They showed it to Hsu Han and I  during our weekly meeting on my brother's couch. Without thinking about the normal startup criteria like market size, defensibility, differentiation (it would've failed all of them), we hopped in. It sounded like fun.

The prototype was simple, you entered a link to something you wanted to track, it would check the price every day and email you when the price changed.

It needed a little work though. They're initial prototype was a white page, a logo and a input box. Like Google. Missing were the customary one sentence value proposition and information on how it worked. 

After taking 9 months to release our first product, we had a rule that any new product we built had to ship the following Monday. Regardless of how buggy it was, how unpolished it looked or how many features it lacked. 

We renamed it to PriceYeti (is it the right price yet), made some small improvements and got it out the door.

Here's what it looked:

<a href="https://s3.amazonaws.com/hsukenooi/homepage_step1.png" target="_blank"><img src="https://s3.amazonaws.com/hsukenooi/homepage_step1.png" width="570"></a>

h2. Cutting Corners 

To adhere to our "it must ship in one week" rule, we had to get good at cutting corners. For this project we decided to not invest in the scraper. Not that it wasn't important. Being able to accurately track the price of a product was what the site was about. It'd be terrible to send an email, notifying someone that the price of something they wanted had dropped, only to have them find out it hadn't. Over-promising and under-delivering is typically a bad user experience.

Unfortunately, building an accurate scraper that would work on any site would've taken week if not months. It would also require constant maintenance since websites are constant changing. It would've been a huge investment. We needed to know if this was something people wanted first.

<blockquote class="center">The fastest way to write software is to be the software.</blockquote>

Instead we made a decent scraper and had people verify the price. When the scraper detected a price change, rather than emailing them automatically, it published the change to an internal dashboard. We (mostly Ian, thanks Ian) would  check that dashboard several times a day, verify the price changes  and send  the emails by hand. It's not a scalable solution but it gets you going immediately.

h2. When a Bug Isn't a Bug 

For most sites our semi-automatic system worked. Someone would track a product from Costco's website. We'd diligently check the dashboard for price drops, verify and send out the email.

Our semi-automatic trick worked for most retailers (Costco, Nordstroms, etc.) but not  Amazon. We'd detect that the price of something had dropped from $500 to $450 but when we manually verified the price, it would be $475. We thought it had to be a bug but we couldn't find it. To help us troubleshoot we had the scraper save the page when it detected a price change. That way we could manually see the same page that the scraper saw. If the scraper said $450 but the price on the page was $475 we'd know there was something wrong on our end.

h2. That's Interesting.. 

The scraper wasn't wrong. When we manually looked at the page, the price was in fact $450. What was going on?

Turns out that in the few hours between the scraper checking the price and one of us verifying the price through the dashboard, the price had changed again. The reason it was almost exclusively an Amazon problem was because they're prices changed the most often.

We had no idea prices moved so often. We started collecting prices more frequently and graphing them over weeks. We found that prices went up sometimes. We'd assumed, like most consumers, that prices slowly either stayed constant or declined as new products came out. We found more evidence to support our hypothesis that Amazon prices were the most volatile.

Most importantly, there was clearly a better time to buy. You could get the same product for significantly less if you bought at the right time. If only you could predict whether prices were going to go up or down.

h2. It's Good to Be Lucky 

We'd met Oren Etzioni 2 years earlier while Ian was a student in one of his Computer Science classes at the University of Washington. He'd politely told us the idea we were working on (data mining resumes) wouldn't work. It suffered from the classic chicken or the egg problem. It'd only be useful if we had hundreds of thousands of resumes. How would we get that many?

2 years later, we were sitting in his office again. Telling him  he'd been right but we'd found something else interesting. We showed him what we'd learned, that prices changed often, that people could save money if they bought at the right time, that we'd been wondering if it was predictable.

There wasn't a better person for us to talk to about this. Besides being  a Computer Science Professor specializing in Artificial Intelligence, Oren was a startup founder. His last startup (Farecast) predicted the price of airline tickets, was acquired by Microsoft and became Bing Travel.

I can't overstate how fortuitous this was. The only person who'd started and sold a consumer product based on predicting the price of something happened to be in Seattle and we happened to have taken classes from him.

He thought our findings were interesting. As he liked to say "I've seen this movie before." But first he wanted more data. Specifically around the  following:

<ol>
  <li>Does  price volatility happen in many categories?</li>
  <li>Are the price changes meaningful?</li>
  <li>Are they reasonably predictable?</li>
</ol>

We spent the next few weeks gathering data to answer those questions. Fortunately the answer to all 3 questions was yes. As we progressed, Oren  joined as the 5th co-founder and the rest, as they say, is history.

h2. Big Ideas Start Small 

If you're gonna take anything away from this story maybe it's that big ideas start small. The idea that led to Decide was price alerts. A feature most shopping sites have. It wasn't a big idea. It wasn't going to change the world.

And that's okay. Too often people try to brainstorm their way into the next big idea. As if you could sit down one day and will it into your consciousness. I don't think that's how ideas work. Big ideas are elusive not because there are few of them but because they're indistinguishable from small ideas.

<blockquote class="left">
<p>You see, I think he better than anyone understood that while ideas ultimately can be so powerful, they begin as fragile, barely formed thoughts, so easily missed, so easily compromised, so easily just squished.</p>
<p class="small"> &mdash; Jony Ive on Steve Jobs</p>
</blockquote>

We wouldn't have stumbled into how volatile prices were unless we'd built a website about price tracking. Sometimes you have to jump down the rabbit hole before you know how deep it goes. Most of the time it doesn't go very far but every once in a while, it's magic.

Also get lucky.